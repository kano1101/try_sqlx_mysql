name: Release

on:
  push:
    tags:
      - '*'
    branches: [ main ]


jobs:
  build:
    name: Release binary
    strategy:
      matrix:
        include:
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-gnu
#            artifact_name: try_sqlx_mysql
#            asset_name: main-x86_64-unknown-linux-gnu
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-musl
#            artifact_name: try_sqlx_mysql
#            asset_name: main-x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            artifact_name: try_sqlx_mysql.exe
            asset_name: main-x86_64-pc-windows-gnu.exe
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: try_sqlx_mysql
            asset_name: main-aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: try_sqlx_mysql
            asset_name: main-x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Display Machine Architecture
        run: uname -m

      - name: Install OpenSSL macOS
        if: runner.os == 'macOS'
        run: brew install openssl
      - name: Install OpenSSL Linux
        if: runner.os == 'Linux'
        run: |
          echo '~1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
          sudo apt update
          echo '~2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
          sudo apt install pkg-config libssl-dev
          echo '~3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
          sudo echo 'export OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu/' >> ~/.bash_profile
          sudo echo 'export OPENSSL_INCLUDE_DIR=/usr/include/openssl/' >> ~/.bash_profile
          sudo -s
          source ~./bash_profile
          sudo which openssl
          echo '~4~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
          sudo apt list --installed | grep ssl
          echo '~5~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
          sudo dpkg -L libssl-dev
          echo '~6~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'

      - name: Cross build with all features
        uses: actions-rs/cargo@v1
        with:
          use-cross: true 
          command: build
          args: --release --target ${{ matrix.target }} --all-features --verbose

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.1.1
        with:
          command: ls target/${{ matrix.target }}/release/
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
